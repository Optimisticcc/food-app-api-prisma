// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// Đồ ăn combo lưu trữ ntn?
// Thanh toán hiện nay ntn k được thể hiện trong CSDL
// Việc đặt đồ kèm giao đồ k ?
// Làm thế nào biết trạng thái đơn hàng: đặt nhắp - đã thu tiền - đã lên đơn - đã giao - đã hủy
model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  products  Product[]
}

model BlogCategory {
  id        Int      @id @default(autoincrement())
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  blogs     Blog[]
}

model Product {
  id                Int              @id @default(autoincrement())
  name              String
  price             Decimal?
  description       String?
  quantity          Int?
  quantitySold      Int?
  slug              String           @unique
  updatedAt         DateTime         @updatedAt
  createdAt         DateTime         @default(now())
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int?
  images            Image[]
  orderItem         OrderItem[]
  discount          Discount?        @relation(fields: [discountId], references: [id])
  discountId        Int?             @unique
}

model Discount {
  id              Int       @id @default(autoincrement())
  discountPercent Decimal?
  isActive        Boolean   @default(true)
  deletedAt       DateTime?
  updatedAt       DateTime  @updatedAt
  createdAt       DateTime  @default(now())
  product         Product?
}

model Image {
  id          Int      @id @default(autoincrement())
  link        String
  description String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  Product     Product? @relation(fields: [productId], references: [id])
  productId   Int?
  Blog        Blog?
}

model Blog {
  id             Int           @id @default(autoincrement())
  title          String
  summary        String?
  content        String?
  slug           String        @unique
  updatedAt      DateTime      @updatedAt
  createdAt      DateTime      @default(now())
  BlogCategory   BlogCategory? @relation(fields: [blogCategoryId], references: [id])
  blogCategoryId Int?
  image          Image?        @relation(fields: [imageId], references: [id])
  imageId        Int?          @unique
  User           User?         @relation(fields: [userId], references: [id])
  userId         Int?
}

model Customer {
  id              Int               @id @default(autoincrement())
  name            String
  phoneNumber     String
  email           String
  password        String
  status          String?
  dateOfBirth     String?
  updatedAt       DateTime          @updatedAt
  createdAt       DateTime          @default(now())
  orders          Order[]
  customerAddress CustomerAddress[]
}

model CustomerAddress {
  id          Int       @id @default(autoincrement())
  address     String
  phoneNumber String
  email       String
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
  Customer    Customer? @relation(fields: [customerId], references: [id])
  customerId  Int?
}

model User {
  id                Int                      @id @default(autoincrement())
  name              String
  email             String
  password          String
  avatar            String?
  status            String?
  address           String
  updatedAt         DateTime                 @updatedAt
  createdAt         DateTime                 @default(now())
  orders            Order[]
  permisionRelation PermistionRelationship[]
  blogs             Blog[]
}

model Order {
  id              Int            @id @default(autoincrement())
  total           Decimal
  note            String?
  orderStatus     String
  address         String
  phoneNumber     String
  email           String
  dateCompleted   DateTime?
  createdAt       DateTime       @default(now())
  orderItems      OrderItem[]
  user            User?          @relation(fields: [userId], references: [id])
  userId          Int?
  Customer        Customer?      @relation(fields: [customerId], references: [id])
  customerId      Int?
  paymentDetail   PaymentDetail? @relation(fields: [paymentDetailId], references: [id])
  paymentDetailId Int?           @unique
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  Order     Order?   @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  orderId   Int?
  Product   Product? @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId Int?
}

model PaymentDetail {
  id            Int      @id @default(autoincrement())
  amount        Decimal
  paymentType   String?
  paymentStatus String
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
  Order         Order?
}

model PermistionRelationship {
  id           Int         @id @default(autoincrement())
  suspend      Boolean?
  updatedAt    DateTime    @updatedAt
  createdAt    DateTime    @default(now())
  User         User?       @relation(fields: [userId], references: [id])
  userId       Int?
  Permistion   Permistion? @relation(fields: [permistionId], references: [id])
  permistionId Int?
}

model Permistion {
  id                Int                      @id @default(autoincrement())
  name              String?
  description       String?
  updatedAt         DateTime                 @updatedAt
  createdAt         DateTime                 @default(now())
  permisionRelation PermistionRelationship[]
  permistionDetails PermistionDetail[]
}

model PermistionDetail {
  id           Int         @id @default(autoincrement())
  nameAction   String?
  codeAction   String?
  updatedAt    DateTime    @updatedAt
  createdAt    DateTime    @default(now())
  Permistion   Permistion? @relation(fields: [permistionId], references: [id])
  permistionId Int?
}

model Setting {
  id        Int      @id @default(autoincrement())
  type      String
  value     String
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

// enum OrderStatus {
//   COMPLETE
//   INCOMPLETE
//   @@map("order_status")
// }
// enum PaymentStatus {
//   PAID
//   UNPAID
//   @@map("payment_status")
// }
// enum PaymentType {
//   MOMO
//   COD
//   @@map("payment_type")
// }

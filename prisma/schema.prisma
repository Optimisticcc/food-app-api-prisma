// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// Đồ ăn combo lưu trữ ntn?
// Thanh toán hiện nay ntn k được thể hiện trong CSDL
// Việc đặt đồ kèm giao đồ k ?
// Làm thế nào biết trạng thái đơn hàng: đặt nhắp - đã thu tiền - đã lên đơn - đã giao - đã hủy
model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  products  Product[]
}

model BlogCategory {
  id        Int      @id @default(autoincrement())
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  blogs     Blog[]
}

model Product {
  id                Int              @id @default(autoincrement())
  name              String
  price             Decimal
  description       String?          @db.VarChar(8000)
  quantity          Int
  quantitySold      Int
  code              String           @unique
  updatedAt         DateTime         @updatedAt
  createdAt         DateTime         @default(now())
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int?
  images            Image[]
  orderItem         OrderItem[]
}

model Discount {
  id              Int      @id @default(autoincrement())
  code            String   @unique
  discountPercent Decimal  @default(0)
  isActive        Boolean? @default(true) @db.Bit
  startDate       DateTime
  expirationDate  DateTime
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
  Order           Order?
}

model Image {
  id        Int      @id @default(autoincrement())
  source    String
  isPicked  Boolean  @default(false) @db.Bit
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  Blog      Blog?
}

model Blog {
  id             Int           @id @default(autoincrement())
  title          String
  summary        String        @db.VarChar(8000)
  content        String        @db.VarChar(8000)
  slug           String        @unique
  updatedAt      DateTime      @updatedAt
  createdAt      DateTime      @default(now())
  BlogCategory   BlogCategory? @relation(fields: [blogCategoryId], references: [id])
  blogCategoryId Int?
  User           User?         @relation(fields: [userId], references: [id])
  userId         Int?
  image          Image?        @relation(fields: [imageId], references: [id])
  imageId        Int?          @unique
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String
  phoneNumber String
  email       String
  password    String
  address     String
  status      Boolean? @default(true) @db.Bit
  dateOfBirth String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  orders      Order[]
}

model Avatar {
  id        Int      @id @default(autoincrement())
  source    String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  User      User?
}

model User {
  id                    Int                     @id @default(autoincrement())
  name                  String
  phoneNumber           String
  email                 String
  password              String
  avatar                Avatar?                 @relation(fields: [avatarId], references: [id])
  status                Boolean?                @default(true) @db.Bit
  address               String
  updatedAt             DateTime                @updatedAt
  createdAt             DateTime                @default(now())
  orders                Order[]
  blogs                 Blog[]
  PermisionRelationship PermisionRelationship[]
  avatarId              Int?                    @unique
}

model Order {
  id              Int            @id @default(autoincrement())
  total           Decimal?       @default(0)
  note            String?
  orderStatus     Boolean        @default(false) @db.Bit
  address         String
  phoneNumber     String
  email           String
  dateCompleted   DateTime?
  createdAt       DateTime       @default(now())
  orderItems      OrderItem[]
  user            User?          @relation(fields: [userId], references: [id])
  userId          Int?
  Customer        Customer?      @relation(fields: [customerId], references: [id])
  customerId      Int?
  paymentDetail   PaymentDetail? @relation(fields: [paymentDetailId], references: [id])
  paymentDetailId Int?           @unique
  discount        Discount?      @relation(fields: [discountId], references: [id])
  discountId      Int?           @unique
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  Order     Order?   @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  orderId   Int?
  Product   Product? @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId Int?
}

model PaymentDetail {
  id            Int      @id @default(autoincrement())
  amount        Decimal
  paymentType   String
  paymentStatus Boolean  @default(false) @db.Bit
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
  Order         Order?
}

model PermisionRelationship {
  id          Int        @id @default(autoincrement())
  suspend     Boolean?   @default(false) @db.Bit
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  User        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  Permision   Permision? @relation(fields: [permisionId], references: [id])
  permisionId Int?
}

model Permision {
  id                    Int                     @id @default(autoincrement())
  name                  String
  description           String?
  updatedAt             DateTime                @updatedAt
  createdAt             DateTime                @default(now())
  permisionDetails      PermisionDetail[]
  permisionRelationship PermisionRelationship[]
}

model PermisionDetail {
  id          Int        @id @default(autoincrement())
  nameAction  String
  codeAction  String
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  Permision   Permision? @relation(fields: [permisionId], references: [id])
  permisionId Int?
}

model Setting {
  id        Int      @id @default(autoincrement())
  type      String
  value     String
  name      String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
